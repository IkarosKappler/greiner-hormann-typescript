(function(k,f){"function"===typeof define&&define.amd?define([],f):"object"===typeof exports?module.exports=f():k.greinerHormann=f()})(this,function(){function k(a,b,c,d){a=new h(a);b=new h(b);return a.clip(b,c,d)}var f=function(a,b){Array.isArray(a)&&(b=a[1],a=a[0]);this.x=a;this.y=b;this._corresponding=this.prev=this.next=null;this._distance=0;this._isEntry=!0;this._visited=this._isIntersection=!1};f.createIntersection=function(a,b,c){a=new f(a,b);a._distance=c;a._isIntersection=!0;a._isEntry=!1;
return a};f.prototype.setChecked=function(){this._visited=!0;null===this._corresponding||this._corresponding._visited||this._corresponding.setChecked()};f.prototype.equals=function(a){return this.x===a.x&&this.y===a.y};f.prototype.isInside=function(a){var b=0,c=new f(Infinity,this.y),d=a.first,e;do e=new l(this,c,d,a.getNext(d.next)),!d._isIntersection&&e.valid()&&b++,d=d.next;while(!d.equals(a.first));return 0!==b%2};var l=function(a,b,c,d){this.toClip=this.toSource=this.y=this.x=0;var e=(d.y-c.y)*
(b.x-a.x)-(d.x-c.x)*(b.y-a.y);0!==e&&(this.toSource=((d.x-c.x)*(a.y-c.y)-(d.y-c.y)*(a.x-c.x))/e,this.toClip=((b.x-a.x)*(a.y-c.y)-(b.y-a.y)*(a.x-c.x))/e,this.valid()&&(this.x=a.x+this.toSource*(b.x-a.x),this.y=a.y+this.toSource*(b.y-a.y)))};l.prototype.valid=function(){return 0<this.toSource&&1>this.toSource&&0<this.toClip&&1>this.toClip};var h=function(a){this.first=null;for(var b=this.vertices=0,c=a.length;b<c;b++)this.addVertex(new f(a[b]))};h.prototype.addVertex=function(a){if(null==this.first)this.first=
a,this.first.next=a,this.first.prev=a;else{var b=this.first,c=b.prev;b.prev=a;a.next=b;a.prev=c;c.next=a}this.vertices++};h.prototype.insertVertex=function(a,b,c){for(;!b.equals(c)&&b._distance<a._distance;)b=b.next;a.next=b;c=b.prev;a.prev=c;c.next=a;b.prev=a;this.vertices++};h.prototype.getNext=function(a){for(;a._isIntersection;)a=a.next;return a};h.prototype.getFirstIntersect=function(){var a=this.first;do{if(a._isIntersection&&!a._visited)break;a=a.next}while(!a.equals(this.first));return a};
h.prototype.hasUnprocessed=function(){var a=this.first;do{if(a._isIntersection&&!a._visited)return!0;a=a.next}while(!a.equals(this.first));return!1};h.prototype.getPoints=function(){for(var a=[],b=this.first,c=0;c<this.vertices;c++)a[c]=[b.x,b.y],b=b.next;return a};h.prototype.clip=function(a,b,c){var d=this.first,e=a.first;do{if(!d._isIntersection){do{if(!e._isIntersection){var g=new l(d,this.getNext(d.next),e,a.getNext(e.next));if(g.valid()){var k=f.createIntersection(g.x,g.y,g.toSource),g=f.createIntersection(g.x,
g.y,g.toClip);k._corresponding=g;g._corresponding=k;this.insertVertex(k,d,this.getNext(d.next));a.insertVertex(g,e,a.getNext(e.next))}}e=e.next}while(!e.equals(a.first))}d=d.next}while(!d.equals(this.first));d=this.first;e=a.first;b^=d.isInside(a);c^=e.isInside(this);do d._isIntersection&&(d._isEntry=b,b=!b),d=d.next;while(!d.equals(this.first));do e._isIntersection&&(e._isEntry=c,c=!c),e=e.next;while(!e.equals(a.first));for(a=[];this.hasUnprocessed();){b=this.getFirstIntersect();c=new h([]);c.addVertex(new f(b.x,
b.y));do{b.setChecked();if(b._isEntry){do b=b.next,c.addVertex(new f(b.x,b.y));while(!b._isIntersection)}else{do b=b.prev,c.addVertex(new f(b.x,b.y));while(!b._isIntersection)}b=b._corresponding}while(!b._visited);a.push(c)}return a};return{union:function(a,b){return k(a,b,!1,!1)},intersection:function(a,b){return k(a,b,!0,!0)},diff:function(a,b){return k(a,b,!1,!0)}}});
